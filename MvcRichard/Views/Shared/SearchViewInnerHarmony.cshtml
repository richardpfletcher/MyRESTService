<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>



<div id="centerdivResults">

    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>@ViewBag.Title - Inner Harmony</title>
        @Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")
    </head>
    <body>


        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    @*@Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })*@
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li>@Html.ActionLink("Home", "Index", "Home")</li>

                        <li>
                            <a href="/search/">Search</a>
                        </li>

                        <li>
                            <a href="/CD/CDMenu/">CD/Videos</a>
                        </li>

                        <li>
                            <a href="/Sayings/SayingsMenu">Sayings </a>
                        </li>

                        <li>
                            <a href="/Books/BooksMenu">Books</a>
                        </li>

                        <li>
                            <a href="/Talks/TalksMenu">Talks</a>
                        </li>

                        <li>@Html.ActionLink("Comments", "Comments", "Home")</li>
                        <li>@Html.ActionLink("Links", "Links", "Home")</li>
                        <li>@Html.ActionLink("About", "About", "Home")</li>
                    </ul>
                </div>
            </div>
        </div>




        <div class="page-wrapper">

            <div class="row">
                <div class="col-sm-2">

                </div>

                <div class="col-sm-4">

                    <div>
                        <img src="\Audio\Books\InnerHarmony\album.jpg" style="width:300px;height:300px;" alt="album">

                    </div>
                    <br /><br /><br />
                    @Html.DropDownList("dowList", (IEnumerable<SelectListItem>)ViewData["ethnicData"], new { @style = "width:200px;", @onchange = "GetTopic();" })




                    <div>

                        <a href="\PDF\Books\InnerHarmony\InnerHarmony.pdf" target="_blank">View document </a>
                    </div>

                    <p></p>

                    @try
                    {
                        int counter = 0;
                        string clip = "";

                        foreach (MvcRichard.Models.DocumentModel order
                                   in (List<MvcRichard.Models.DocumentModel>)ViewData["orderData"])
                        {

                            <div>
                                <div>
                                    @order.ShortName
                                </div>
                                <div>
                                    @{
                                        clip = "audio" + counter;
                                    }


                                    <audio controls class="custom-audio" onplay="playClickAudio1(@counter)" id="@clip" data-array-index="@counter">


                                        <source src="@order.PathName" type="audio/wav">
                                        Your browser does not support the audio element.

                                    </audio>
                                    @{
                                        counter++;
                                    }
                                </div>
                            </div>
                        }
                    }
                    catch
                    {
                    }
                </div>
                <div class="col-sm-6">
                    <div>
                        <object data="\PDF\Books\InnerHarmony\InnerHarmony.pdf" width="700" height="800" type="application/pdf">
                            alt : <a href="\PDF\Books\InnerHarmony\InnerHarmony.pdf">Heart Of Love</a>
                        </object>
                    </div>
                </div>
            </div>
        </div>

</div>

<script>
    var audioElements = document.querySelectorAll('audio');
    var currentAudioIndex = 0;

    function playNextAudio() {
        // Pause the current audio
        audioElements[currentAudioIndex].pause();

        // Move to the next audio element
        currentAudioIndex = (currentAudioIndex + 1) % audioElements.length;

        // Play the next audio
        audioElements[currentAudioIndex].play();
    }

    // Set up the 'ended' event for each audio element
    audioElements.forEach(function (audioElement) {
        audioElement.addEventListener('ended', playNextAudio);
    });

    // Function to handle the play event
    function playClickAudio1(current) {

        currentAudioIndex = current;

    }

    var currentlyPlaying = null;

    audioElements.forEach(function (audioElement) {
        audioElement.addEventListener('play', function (event) {
            if (currentlyPlaying && currentlyPlaying !== event.target) {
                // Pause the currently playing track if it's different from the clicked one
                currentlyPlaying.pause();
            }
            currentlyPlaying = event.target;
        });
    });

    try {
        // Code that may throw an exception
        audioElements[currentAudioIndex].play();

    } catch (error) {
        // Code to handle the exception
        console.error("An error occurred:", error.message);
    } finally {
        // Code that will always be executed, regardless of whether an exception occurred
        console.log("Finally block executed");
    }

</script>







